using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Windows.Forms;
using AquaparkApp.Controls;
using AquaparkApp.Models;
using AquaparkApp.BLL;
using AquaparkApp.DAL;

namespace AquaparkApp.Forms
{
    public partial class MainForm : Form
    {
        // –°–µ—Ä–≤–∏—Å—ã
        private TicketService _ticketService;
        private PaymentService _paymentService;

        public MainForm()
        {
            InitializeComponent();
            InitializeServices();
            SetupUI();
        }

        private void InitializeServices()
        {
            _ticketService = new TicketService();
            _paymentService = new PaymentService();
        }


        private void SetupUI()
        {
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞
            SetupHeaderPanel();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            SetupSidebarPanel();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–Ω–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            SetupContentPanel();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤
            SetupAttractionsPanel();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
            SetupMainTabs();
        }

        private void SetupHeaderPanel()
        {
            // –õ–æ–≥–æ—Ç–∏–ø
            var logoLabel = new Label
            {
                Text = "üåä –ê–∫–≤–∞–ø–∞—Ä–∫ \"–í–æ–¥–Ω—ã–π –º–∏—Ä\"",
                Font = new Font("SF Pro Text", 20F, FontStyle.Bold),
                ForeColor = Color.White,
                Location = new Point(30, 20),
                AutoSize = true
            };

            _headerPanel.Controls.Add(logoLabel);

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            _loginButton.Click += LoginButton_Click;
            _registerButton.Click += RegisterButton_Click;
            _logoutButton.Click += LogoutButton_Click;
        }

        private void SetupSidebarPanel()
        {
            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –º–µ–Ω—é
            var scrollPanel = new Panel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                Padding = new Padding(5),
                BackColor = Color.FromArgb(240, 240, 240)
            };

            // –ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–∞–±–ª–∏—Ü–∞–º –ë–î
            var menuItems = new[]
            {
                new { Text = "üè† –ì–ª–∞–≤–Ω–∞—è", Tag = "home" },
                new { Text = "üë• –ö–ª–∏–µ–Ω—Ç—ã", Tag = "clients" },
                new { Text = "üé´ –ë–∏–ª–µ—Ç—ã", Tag = "tickets" },
                new { Text = "üõçÔ∏è –£—Å–ª—É–≥–∏", Tag = "services" },
                new { Text = "üèä –ó–æ–Ω—ã", Tag = "zones" },
                new { Text = "üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", Tag = "employees" },
                new { Text = "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", Tag = "schedule" },
                new { Text = "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", Tag = "inventory" },
                new { Text = "üèÉ –ê—Ä–µ–Ω–¥–∞", Tag = "rentals" },
                new { Text = "üö™ –ü–æ—Å–µ—â–µ–Ω–∏—è", Tag = "visits" },
                new { Text = "üí≥ –û–ø–ª–∞—Ç—ã", Tag = "payments" },
                new { Text = "üìä –û—Ç—á–µ—Ç—ã", Tag = "reports" },
                new { Text = "üé¨ –í–∏–¥–µ–æ", Tag = "video" },
                new { Text = "üó∫Ô∏è –ö–∞—Ä—Ç–∞", Tag = "map" },
                new { Text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", Tag = "settings" },
                new { Text = "üë§ –ü—Ä–æ—Ñ–∏–ª—å", Tag = "profile" },
                new { Text = "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", Tag = "admin" }
            };

            int y = 10;
            foreach (var item in menuItems)
            {
                var menuButton = new MacOSButton
                {
                    Text = item.Text,
                    Size = new Size(220, 35),
                    Location = new Point(10, y),
                    Font = new Font("SF Pro Text", 10F, FontStyle.Regular),
                    Tag = item.Tag
                };
                menuButton.Click += MenuButton_Click;
                scrollPanel.Controls.Add(menuButton);
                y += 40;
            }

            _sidebarPanel.Controls.Add(scrollPanel);
        }

        private void SetupContentPanel()
        {
            // –ü–∞–Ω–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ Designer
        }

        private void SetupAttractionsPanel()
        {
            // –ü–∞–Ω–µ–ª—å –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ Designer
        }

        private void SetupMainTabs()
        {
            // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫
            _mainTabControl.DrawItem += TabControl_DrawItem;

            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏
            var homeTab = new TabPage("üè† –ì–ª–∞–≤–Ω–∞—è");
            var attractionsTab = new TabPage("üé¢ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã");
            var ticketsTab = new TabPage("üé´ –ë–∏–ª–µ—Ç—ã");
            var reportsTab = new TabPage("üìä –û—Ç—á–µ—Ç—ã");
            var settingsTab = new TabPage("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏");

            _mainTabControl.TabPages.AddRange(new TabPage[] { homeTab, attractionsTab, ticketsTab, reportsTab, settingsTab });
        }

        private void TabControl_DrawItem(object sender, DrawItemEventArgs e)
        {
            var tabControl = sender as TabControl;
            var tabPage = tabControl.TabPages[e.Index];
            var tabRect = tabControl.GetTabRect(e.Index);

            // –†–∏—Å—É–µ–º —Ñ–æ–Ω –≤–∫–ª–∞–¥–∫–∏
            using (var brush = new LinearGradientBrush(tabRect, 
                Color.FromArgb(240, 240, 240), 
                Color.FromArgb(220, 220, 220), 
                LinearGradientMode.Vertical))
            {
                e.Graphics.FillRectangle(brush, tabRect);
            }

            // –†–∏—Å—É–µ–º –≥—Ä–∞–Ω–∏—Ü—É
            using (var pen = new Pen(Color.FromArgb(200, 200, 200), 1))
            {
                e.Graphics.DrawRectangle(pen, tabRect);
            }

            // –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
            var textRect = new Rectangle(tabRect.X + 5, tabRect.Y + 5, tabRect.Width - 10, tabRect.Height - 10);
            TextRenderer.DrawText(e.Graphics, tabPage.Text, 
                new Font("SF Pro Display", 11F, FontStyle.Regular), 
                textRect, Color.FromArgb(51, 51, 51), 
                TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter);
        }


        private void MenuButton_Click(object sender, EventArgs e)
        {
            var button = sender as MacOSButton;
            var tag = button.Tag.ToString();

            switch (tag)
            {
                case "home":
                    ShowHomePage();
                    break;
                case "clients":
                    ShowClientsPage();
                    break;
                case "tickets":
                    ShowTicketsPage();
                    break;
                case "services":
                    ShowServicesPage();
                    break;
                case "zones":
                    ShowZonesPage();
                    break;
                case "employees":
                    ShowEmployeesPage();
                    break;
                case "schedule":
                    ShowSchedulePage();
                    break;
                case "inventory":
                    ShowInventoryPage();
                    break;
                case "rentals":
                    ShowRentalsPage();
                    break;
                case "visits":
                    ShowVisitsPage();
                    break;
                case "payments":
                    ShowPaymentsPage();
                    break;
                case "reports":
                    ShowReportsPage();
                    break;
                case "video":
                    ShowVideoPlayer();
                    break;
                case "map":
                    ShowInteractiveMap();
                    break;
                case "settings":
                    ShowSettingsPage();
                    break;
                case "profile":
                    ShowPlaceholderPage("üë§ –ü—Ä–æ—Ñ–∏–ª—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
                    break;
                case "admin":
                    ShowPlaceholderPage("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏");
                    break;
            }
        }

        private void LoginButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üîê –í—Ö–æ–¥", "–§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É");
        }

        private void RegisterButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        }

        private void LogoutButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üö™ –í—ã—Ö–æ–¥", "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");
        }

        private void UpdateUserInterface()
        {
            _welcomeLabel.Text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–≤–∞–ø–∞—Ä–∫–æ–º!";
        }

        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        private void ShowHomePage()
        {
            _contentPanel.Controls.Clear();
            
            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            var scrollPanel = new Panel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                Padding = new Padding(20, 10, 20, 20)
            };

            var welcomeLabel = new Label
            {
                Text = "üåä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–≤–∞–ø–∞—Ä–∫–æ–º!",
                Font = new Font("SF Pro Text", 28F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(20, 10),
                AutoSize = true
            };

            var descLabel = new Label
            {
                Text = "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã –∞–∫–≤–∞–ø–∞—Ä–∫–∞",
                Font = new Font("SF Pro Text", 16F, FontStyle.Regular),
                ForeColor = Color.FromArgb(100, 100, 100),
                Location = new Point(20, 60),
                AutoSize = true
            };

            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏
            var featuresPanel = new Panel
            {
                Location = new Point(20, 110),
                Size = new Size(800, 350),
                BackColor = Color.FromArgb(248, 248, 248),
                BorderStyle = BorderStyle.FixedSingle
            };

            var featuresLabel = new Label
            {
                Text = "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:\n\n" +
                       "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø–æ–∏—Å–∫\n" +
                       "üé´ –°–∏—Å—Ç–µ–º–∞ –±–∏–ª–µ—Ç–æ–≤ - –ø—Ä–æ–¥–∞–∂–∞, –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n" +
                       "üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏ - –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥, —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n" +
                       "üèä –ó–æ–Ω—ã –∞–∫–≤–∞–ø–∞—Ä–∫–∞ - –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞, –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å, –∫–æ–Ω—Ç—Ä–æ–ª—å\n" +
                       "üë∑ –ü–µ—Ä—Å–æ–Ω–∞–ª - —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–æ–Ω—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏\n" +
                       "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å - —É—á–µ—Ç, –∞—Ä–µ–Ω–¥–∞, —Å—Ç–∞—Ç—É—Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è\n" +
                       "üö™ –ü–æ—Å–µ—â–µ–Ω–∏—è - –∫–æ–Ω—Ç—Ä–æ–ª—å –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n" +
                       "üí≥ –ü–ª–∞—Ç–µ–∂–∏ - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç, –æ—Ç—á–µ—Ç—ã –ø–æ –≤—ã—Ä—É—á–∫–µ\n" +
                       "üìä –û—Ç—á–µ—Ç—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel\n" +
                       "üé¨ –í–∏–¥–µ–æ - –ø—Ä–æ–º–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã –∞–∫–≤–∞–ø–∞—Ä–∫–∞\n" +
                       "üó∫Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∑–æ–Ω",
                Font = new Font("SF Pro Text", 11F, FontStyle.Regular),
                ForeColor = Color.FromArgb(80, 80, 80),
                Location = new Point(15, 15),
                Size = new Size(770, 320),
                TextAlign = ContentAlignment.TopLeft
            };

            featuresPanel.Controls.Add(featuresLabel);
            scrollPanel.Controls.AddRange(new Control[] { welcomeLabel, descLabel, featuresPanel });
            _contentPanel.Controls.Add(scrollPanel);
        }

        private void ShowClientsPage()
        {
            ShowPlaceholderPage("üë• –ö–ª–∏–µ–Ω—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowTicketsPage()
        {
            ShowPlaceholderPage("üé´ –ë–∏–ª–µ—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞–º–∏ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º");
        }

        private void ShowServicesPage()
        {
            ShowPlaceholderPage("üõçÔ∏è –£—Å–ª—É–≥–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowZonesPage()
        {
            ShowPlaceholderPage("üèä –ó–æ–Ω—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–æ–Ω–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowEmployeesPage()
        {
            ShowPlaceholderPage("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º");
        }

        private void ShowSchedulePage()
        {
            ShowPlaceholderPage("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º");
        }

        private void ShowInventoryPage()
        {
            ShowPlaceholderPage("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º");
        }

        private void ShowRentalsPage()
        {
            ShowPlaceholderPage("üèÉ –ê—Ä–µ–Ω–¥–∞", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è");
        }

        private void ShowVisitsPage()
        {
            ShowPlaceholderPage("üö™ –ü–æ—Å–µ—â–µ–Ω–∏—è", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤");
        }

        private void ShowPaymentsPage()
        {
            ShowPlaceholderPage("üí≥ –û–ø–ª–∞—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏");
        }

        private void ShowPlaceholderPage(string title, string description)
        {
            _contentPanel.Controls.Clear();
            
            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            var scrollPanel = new Panel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                Padding = new Padding(20, 10, 20, 20)
            };
            
            var titleLabel = new Label
            {
                Text = title,
                Font = new Font("SF Pro Text", 28F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(20, 10),
                AutoSize = true
            };

            var descLabel = new Label
            {
                Text = description,
                Font = new Font("SF Pro Text", 16F, FontStyle.Regular),
                ForeColor = Color.FromArgb(100, 100, 100),
                Location = new Point(20, 60),
                AutoSize = true
            };

            var statusLabel = new Label
            {
                Text = "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                Font = new Font("SF Pro Text", 14F, FontStyle.Italic),
                ForeColor = Color.FromArgb(150, 150, 150),
                Location = new Point(20, 110),
                AutoSize = true
            };

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
            var infoPanel = new Panel
            {
                Location = new Point(20, 160),
                Size = new Size(800, 200),
                BackColor = Color.FromArgb(248, 248, 248),
                BorderStyle = BorderStyle.FixedSingle
            };

            var infoLabel = new Label
            {
                Text = "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ:\n\n" +
                       "‚Ä¢ –î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n" +
                       "‚Ä¢ –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª CRUD –æ–ø–µ—Ä–∞—Ü–∏–π\n" +
                       "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Excel\n" +
                       "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –æ—Ç—á–µ—Ç–æ–≤",
                Font = new Font("SF Pro Text", 11F, FontStyle.Regular),
                ForeColor = Color.FromArgb(80, 80, 80),
                Location = new Point(15, 15),
                Size = new Size(770, 170),
                TextAlign = ContentAlignment.TopLeft
            };

            infoPanel.Controls.Add(infoLabel);
            scrollPanel.Controls.AddRange(new Control[] { titleLabel, descLabel, statusLabel, infoPanel });
            _contentPanel.Controls.Add(scrollPanel);
        }

        private void ShowReportsPage()
        {
            _contentPanel.Controls.Clear();
            var reportsForm = new ReportsForm();
            reportsForm.TopLevel = false;
            reportsForm.Dock = DockStyle.Fill;
            _contentPanel.Controls.Add(reportsForm);
            reportsForm.Show();
        }

        private void ShowVideoPlayer()
        {
            var videoForm = new VideoPlayerForm();
            videoForm.ShowDialog();
        }

        private void ShowInteractiveMap()
        {
            _contentPanel.Controls.Clear();
            var mapForm = new InteractiveMapForm();
            mapForm.TopLevel = false;
            mapForm.Dock = DockStyle.Fill;
            _contentPanel.Controls.Add(mapForm);
            mapForm.Show();
        }

        private void ShowSettingsPage()
        {
            _contentPanel.Controls.Clear();
            var settingsLabel = new Label
            {
                Text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã",
                Font = new Font("SF Pro Display", 18F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(50, 50),
                AutoSize = true
            };
            _contentPanel.Controls.Add(settingsLabel);
        }

        protected override void OnPaint(PaintEventArgs e)
        {
            base.OnPaint(e);
            
            // –†–∏—Å—É–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
            using (var brush = new LinearGradientBrush(
                this.ClientRectangle,
                Color.FromArgb(248, 248, 248),
                Color.FromArgb(235, 235, 235),
                LinearGradientMode.Vertical))
            {
                e.Graphics.FillRectangle(brush, this.ClientRectangle);
            }
        }
    }
}
