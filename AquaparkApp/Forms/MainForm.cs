using System;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Windows.Forms;
using AquaparkApp.Controls;
using AquaparkApp.Models;
using AquaparkApp.BLL;
using AquaparkApp.DAL;

namespace AquaparkApp.Forms
{
    public partial class MainForm : Form
    {
        private Panel _sidebarPanel;
        private Panel _contentPanel;
        private Panel _headerPanel;
        private Label _welcomeLabel;
        private Button _loginButton;
        private Button _registerButton;
        private Button _logoutButton;
        private FlowLayoutPanel _attractionsPanel;
        private TabControl _mainTabControl;
        
        // –°–µ—Ä–≤–∏—Å—ã
        private TicketService _ticketService;
        private PaymentService _paymentService;

        public MainForm()
        {
            InitializeComponent();
            InitializeServices();
            SetupUI();
        }

        private void InitializeServices()
        {
            _ticketService = new TicketService();
            _paymentService = new PaymentService();
        }

        private void InitializeComponent()
        {
            this.SuspendLayout();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º—ã
            this.Text = "–ê–∫–≤–∞–ø–∞—Ä–∫ \"–í–æ–¥–Ω—ã–π –º–∏—Ä\" - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è";
            this.Size = new Size(1400, 900);
            this.StartPosition = FormStartPosition.CenterScreen;
            this.BackColor = Color.FromArgb(248, 248, 248);
            this.Font = new Font("SF Pro Display", 12F, FontStyle.Regular);
            this.FormBorderStyle = FormBorderStyle.Sizable;
            this.WindowState = FormWindowState.Normal;
            this.MinimumSize = new Size(1200, 800);
            
            this.ResumeLayout(false);
        }

        private void SetupUI()
        {
            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞
            CreateHeaderPanel();
            
            // –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
            CreateSidebarPanel();
            
            // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–Ω–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            CreateContentPanel();
            
            // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–æ–≤
            CreateAttractionsPanel();
            
            // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
            CreateMainTabs();
        }

        private void CreateHeaderPanel()
        {
            _headerPanel = new Panel
            {
                Dock = DockStyle.Top,
                Height = 80,
                BackColor = Color.FromArgb(0, 122, 255)
            };

            // –õ–æ–≥–æ—Ç–∏–ø
            var logoLabel = new Label
            {
                Text = "üåä –ê–∫–≤–∞–ø–∞—Ä–∫ \"–í–æ–¥–Ω—ã–π –º–∏—Ä\"",
                Font = new Font("SF Pro Display", 20F, FontStyle.Bold),
                ForeColor = Color.White,
                Location = new Point(30, 20),
                AutoSize = true
            };

            // –ö–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            _loginButton = new MacOSButton
            {
                Text = "–í–æ–π—Ç–∏",
                Size = new Size(100, 35),
                Location = new Point(1200, 20),
                Font = new Font("SF Pro Display", 12F, FontStyle.Regular)
            };
            _loginButton.Click += LoginButton_Click;

            _registerButton = new MacOSButton
            {
                Text = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
                Size = new Size(120, 35),
                Location = new Point(1320, 20),
                Font = new Font("SF Pro Display", 12F, FontStyle.Regular)
            };
            _registerButton.Click += RegisterButton_Click;

            _logoutButton = new MacOSButton
            {
                Text = "–í—ã–π—Ç–∏",
                Size = new Size(100, 35),
                Location = new Point(1200, 20),
                Font = new Font("SF Pro Display", 12F, FontStyle.Regular),
                Visible = false
            };
            _logoutButton.Click += LogoutButton_Click;

            _welcomeLabel = new Label
            {
                Text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                Font = new Font("SF Pro Display", 14F, FontStyle.Regular),
                ForeColor = Color.White,
                Location = new Point(1000, 25),
                AutoSize = true,
                Visible = false
            };

            _headerPanel.Controls.AddRange(new Control[] { logoLabel, _loginButton, _registerButton, _logoutButton, _welcomeLabel });
            this.Controls.Add(_headerPanel);
        }

        private void CreateSidebarPanel()
        {
            _sidebarPanel = new GlassPanel
            {
                Dock = DockStyle.Left,
                Width = 250,
                BackColor = Color.FromArgb(240, 240, 240)
            };

            // –ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–∞–±–ª–∏—Ü–∞–º –ë–î
            var menuItems = new[]
            {
                new { Text = "üè† –ì–ª–∞–≤–Ω–∞—è", Tag = "home" },
                new { Text = "üë• –ö–ª–∏–µ–Ω—Ç—ã", Tag = "clients" },
                new { Text = "üé´ –ë–∏–ª–µ—Ç—ã", Tag = "tickets" },
                new { Text = "üõçÔ∏è –£—Å–ª—É–≥–∏", Tag = "services" },
                new { Text = "üèä –ó–æ–Ω—ã", Tag = "zones" },
                new { Text = "üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", Tag = "employees" },
                new { Text = "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", Tag = "schedule" },
                new { Text = "üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", Tag = "inventory" },
                new { Text = "üèÉ –ê—Ä–µ–Ω–¥–∞", Tag = "rentals" },
                new { Text = "üö™ –ü–æ—Å–µ—â–µ–Ω–∏—è", Tag = "visits" },
                new { Text = "üí≥ –û–ø–ª–∞—Ç—ã", Tag = "payments" },
                new { Text = "üìä –û—Ç—á–µ—Ç—ã", Tag = "reports" },
                new { Text = "üé¨ –í–∏–¥–µ–æ", Tag = "video" },
                new { Text = "üó∫Ô∏è –ö–∞—Ä—Ç–∞", Tag = "map" },
                new { Text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", Tag = "settings" },
                new { Text = "üë§ –ü—Ä–æ—Ñ–∏–ª—å", Tag = "profile" },
                new { Text = "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", Tag = "admin" }
            };

            int y = 20;
            foreach (var item in menuItems)
            {
                var menuButton = new MacOSButton
                {
                    Text = item.Text,
                    Size = new Size(210, 45),
                    Location = new Point(20, y),
                    Font = new Font("SF Pro Display", 12F, FontStyle.Regular),
                    Tag = item.Tag
                };
                menuButton.Click += MenuButton_Click;
                _sidebarPanel.Controls.Add(menuButton);
                y += 55;
            }

            this.Controls.Add(_sidebarPanel);
        }

        private void CreateContentPanel()
        {
            _contentPanel = new Panel
            {
                Dock = DockStyle.Fill,
                BackColor = Color.FromArgb(248, 248, 248),
                Padding = new Padding(20)
            };

            this.Controls.Add(_contentPanel);
        }

        private void CreateAttractionsPanel()
        {
            _attractionsPanel = new FlowLayoutPanel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                Padding = new Padding(10),
                FlowDirection = FlowDirection.LeftToRight,
                WrapContents = true
            };

            _contentPanel.Controls.Add(_attractionsPanel);
        }

        private void CreateMainTabs()
        {
            _mainTabControl = new TabControl
            {
                Dock = DockStyle.Fill,
                Font = new Font("SF Pro Display", 12F, FontStyle.Regular),
                Appearance = TabAppearance.FlatButtons,
                ItemSize = new Size(120, 40),
                SizeMode = TabSizeMode.Fixed
            };

            // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫
            _mainTabControl.DrawMode = TabDrawMode.OwnerDrawFixed;
            _mainTabControl.DrawItem += TabControl_DrawItem;

            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏
            var homeTab = new TabPage("üè† –ì–ª–∞–≤–Ω–∞—è");
            var attractionsTab = new TabPage("üé¢ –ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã");
            var ticketsTab = new TabPage("üé´ –ë–∏–ª–µ—Ç—ã");
            var reportsTab = new TabPage("üìä –û—Ç—á–µ—Ç—ã");
            var settingsTab = new TabPage("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏");

            _mainTabControl.TabPages.AddRange(new TabPage[] { homeTab, attractionsTab, ticketsTab, reportsTab, settingsTab });

            _contentPanel.Controls.Add(_mainTabControl);
        }

        private void TabControl_DrawItem(object sender, DrawItemEventArgs e)
        {
            var tabControl = sender as TabControl;
            var tabPage = tabControl.TabPages[e.Index];
            var tabRect = tabControl.GetTabRect(e.Index);

            // –†–∏—Å—É–µ–º —Ñ–æ–Ω –≤–∫–ª–∞–¥–∫–∏
            using (var brush = new LinearGradientBrush(tabRect, 
                Color.FromArgb(240, 240, 240), 
                Color.FromArgb(220, 220, 220), 
                LinearGradientMode.Vertical))
            {
                e.Graphics.FillRectangle(brush, tabRect);
            }

            // –†–∏—Å—É–µ–º –≥—Ä–∞–Ω–∏—Ü—É
            using (var pen = new Pen(Color.FromArgb(200, 200, 200), 1))
            {
                e.Graphics.DrawRectangle(pen, tabRect);
            }

            // –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
            var textRect = new Rectangle(tabRect.X + 5, tabRect.Y + 5, tabRect.Width - 10, tabRect.Height - 10);
            TextRenderer.DrawText(e.Graphics, tabPage.Text, 
                new Font("SF Pro Display", 11F, FontStyle.Regular), 
                textRect, Color.FromArgb(51, 51, 51), 
                TextFormatFlags.HorizontalCenter | TextFormatFlags.VerticalCenter);
        }


        private void MenuButton_Click(object sender, EventArgs e)
        {
            var button = sender as MacOSButton;
            var tag = button.Tag.ToString();

            switch (tag)
            {
                case "home":
                    ShowHomePage();
                    break;
                case "clients":
                    ShowClientsPage();
                    break;
                case "tickets":
                    ShowTicketsPage();
                    break;
                case "services":
                    ShowServicesPage();
                    break;
                case "zones":
                    ShowZonesPage();
                    break;
                case "employees":
                    ShowEmployeesPage();
                    break;
                case "schedule":
                    ShowSchedulePage();
                    break;
                case "inventory":
                    ShowInventoryPage();
                    break;
                case "rentals":
                    ShowRentalsPage();
                    break;
                case "visits":
                    ShowVisitsPage();
                    break;
                case "payments":
                    ShowPaymentsPage();
                    break;
                case "reports":
                    ShowReportsPage();
                    break;
                case "video":
                    ShowVideoPlayer();
                    break;
                case "map":
                    ShowInteractiveMap();
                    break;
                case "settings":
                    ShowSettingsPage();
                    break;
                case "profile":
                    ShowPlaceholderPage("üë§ –ü—Ä–æ—Ñ–∏–ª—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
                    break;
                case "admin":
                    ShowPlaceholderPage("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏");
                    break;
            }
        }

        private void LoginButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üîê –í—Ö–æ–¥", "–§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É");
        }

        private void RegisterButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "–§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        }

        private void LogoutButton_Click(object sender, EventArgs e)
        {
            ShowPlaceholderPage("üö™ –í—ã—Ö–æ–¥", "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");
        }

        private void UpdateUserInterface()
        {
            _welcomeLabel.Text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–≤–∞–ø–∞—Ä–∫–æ–º!";
        }

        // –ú–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        private void ShowHomePage()
        {
            _contentPanel.Controls.Clear();
            var welcomeLabel = new Label
            {
                Text = "üåä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–≤–∞–ø–∞—Ä–∫–æ–º!",
                Font = new Font("SF Pro Display", 24F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(50, 50),
                AutoSize = true
            };
            _contentPanel.Controls.Add(welcomeLabel);
        }

        private void ShowClientsPage()
        {
            ShowPlaceholderPage("üë• –ö–ª–∏–µ–Ω—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowTicketsPage()
        {
            ShowPlaceholderPage("üé´ –ë–∏–ª–µ—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞–º–∏ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º");
        }

        private void ShowServicesPage()
        {
            ShowPlaceholderPage("üõçÔ∏è –£—Å–ª—É–≥–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowZonesPage()
        {
            ShowPlaceholderPage("üèä –ó–æ–Ω—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–æ–Ω–∞–º–∏ –∞–∫–≤–∞–ø–∞—Ä–∫–∞");
        }

        private void ShowEmployeesPage()
        {
            ShowPlaceholderPage("üë∑ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º");
        }

        private void ShowSchedulePage()
        {
            ShowPlaceholderPage("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º");
        }

        private void ShowInventoryPage()
        {
            ShowPlaceholderPage("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º");
        }

        private void ShowRentalsPage()
        {
            ShowPlaceholderPage("üèÉ –ê—Ä–µ–Ω–¥–∞", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è");
        }

        private void ShowVisitsPage()
        {
            ShowPlaceholderPage("üö™ –ü–æ—Å–µ—â–µ–Ω–∏—è", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤");
        }

        private void ShowPaymentsPage()
        {
            ShowPlaceholderPage("üí≥ –û–ø–ª–∞—Ç—ã", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞–º–∏");
        }

        private void ShowPlaceholderPage(string title, string description)
        {
            _contentPanel.Controls.Clear();
            
            var titleLabel = new Label
            {
                Text = title,
                Font = new Font("SF Pro Display", 24F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(50, 50),
                AutoSize = true
            };

            var descLabel = new Label
            {
                Text = description,
                Font = new Font("SF Pro Display", 14F, FontStyle.Regular),
                ForeColor = Color.FromArgb(100, 100, 100),
                Location = new Point(50, 100),
                AutoSize = true
            };

            var statusLabel = new Label
            {
                Text = "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                Font = new Font("SF Pro Display", 12F, FontStyle.Italic),
                ForeColor = Color.FromArgb(150, 150, 150),
                Location = new Point(50, 150),
                AutoSize = true
            };

            _contentPanel.Controls.AddRange(new Control[] { titleLabel, descLabel, statusLabel });
        }

        private void ShowReportsPage()
        {
            _contentPanel.Controls.Clear();
            var reportsForm = new ReportsForm();
            reportsForm.TopLevel = false;
            reportsForm.Dock = DockStyle.Fill;
            _contentPanel.Controls.Add(reportsForm);
            reportsForm.Show();
        }

        private void ShowVideoPlayer()
        {
            var videoForm = new VideoPlayerForm();
            videoForm.ShowDialog();
        }

        private void ShowInteractiveMap()
        {
            _contentPanel.Controls.Clear();
            var mapForm = new InteractiveMapForm();
            mapForm.TopLevel = false;
            mapForm.Dock = DockStyle.Fill;
            _contentPanel.Controls.Add(mapForm);
            mapForm.Show();
        }

        private void ShowSettingsPage()
        {
            _contentPanel.Controls.Clear();
            var settingsLabel = new Label
            {
                Text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã",
                Font = new Font("SF Pro Display", 18F, FontStyle.Bold),
                ForeColor = Color.FromArgb(0, 122, 255),
                Location = new Point(50, 50),
                AutoSize = true
            };
            _contentPanel.Controls.Add(settingsLabel);
        }

        protected override void OnPaint(PaintEventArgs e)
        {
            base.OnPaint(e);
            
            // –†–∏—Å—É–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
            using (var brush = new LinearGradientBrush(
                this.ClientRectangle,
                Color.FromArgb(248, 248, 248),
                Color.FromArgb(235, 235, 235),
                LinearGradientMode.Vertical))
            {
                e.Graphics.FillRectangle(brush, this.ClientRectangle);
            }
        }
    }
}
