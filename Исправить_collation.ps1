# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å collation –≤ PostgreSQL
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

Write-Host "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å collation –≤ PostgreSQL" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan

# –ü—É—Ç—å –∫ psql
$psqlPath = "C:\Program Files\PostgreSQL\17\bin\psql.exe"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ psql
if (-not (Test-Path $psqlPath)) {
    Write-Host "‚ùå PostgreSQL –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $psqlPath" -ForegroundColor Red
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ PostgreSQL –Ω–∞–π–¥–µ–Ω: $psqlPath" -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥
function Execute-SQL {
    param(
        [string]$Command,
        [string]$Password = "postgres"
    )
    
    $env:PGPASSWORD = $Password
    try {
        $result = & $psqlPath -U postgres -c $Command 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: $result" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
$passwords = @("postgres", "123", "admin", "password", "")

Write-Host "`nüîç –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..." -ForegroundColor Yellow

$connected = $false
foreach ($password in $passwords) {
    Write-Host "–ü—Ä–æ–±—É–µ–º –ø–∞—Ä–æ–ª—å: $password" -ForegroundColor Yellow
    
    $env:PGPASSWORD = $password
    $testResult = & $psqlPath -U postgres -c "SELECT version();" 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º: $password" -ForegroundColor Green
        $connected = $true
        break
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å –ø–∞—Ä–æ–ª–µ–º: $password" -ForegroundColor Red
    }
}

if (-not $connected) {
    Write-Host "`n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL" -ForegroundColor Red
    Write-Host "–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:" -ForegroundColor Yellow
    Write-Host "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Yellow
    Write-Host "2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è postgres" -ForegroundColor Yellow
    Write-Host "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ pg_hba.conf" -ForegroundColor Yellow
    Write-Host "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å postgres" -ForegroundColor Yellow
    exit 1
}

Write-Host "`nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å collation..." -ForegroundColor Yellow

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è collation
$commands = @(
    "ALTER DATABASE template1 REFRESH COLLATION VERSION;",
    "ALTER DATABASE template0 REFRESH COLLATION VERSION;",
    "ALTER DATABASE postgres REFRESH COLLATION VERSION;"
)

foreach ($command in $commands) {
    Write-Host "–í—ã–ø–æ–ª–Ω—è–µ–º: $command" -ForegroundColor Yellow
    if (Execute-SQL -Command $command) {
        Write-Host "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..." -ForegroundColor Yellow
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..." -ForegroundColor Yellow
$checkCommand = "SELECT datname, datcollversion FROM pg_database WHERE datname IN ('template0', 'template1', 'postgres');"
Execute-SQL -Command $checkCommand

Write-Host "`nüéØ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow
$testDbCommand = "CREATE DATABASE test_collation_db;"
if (Execute-SQL -Command $testDbCommand) {
    Write-Host "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
    Execute-SQL -Command "DROP DATABASE test_collation_db;"
    Write-Host "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green
    
    Write-Host "`nüéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å collation –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!" -ForegroundColor Green
    Write-Host "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–∫–≤–∞–ø–∞—Ä–∫–∞" -ForegroundColor Green
} else {
    Write-Host "`n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å collation –º–æ–∂–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è" -ForegroundColor Yellow
    Write-Host "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É PostgreSQL" -ForegroundColor Yellow
    Write-Host "–ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Yellow
}

Write-Host "`nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∞–∫–≤–∞–ø–∞—Ä–∫–∞" -ForegroundColor White
Write-Host "2. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: .\–ó–∞–ø—É—Å–∫_–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.ps1" -ForegroundColor White
