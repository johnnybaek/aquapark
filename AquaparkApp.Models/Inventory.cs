using System;
using System.ComponentModel.DataAnnotations;

namespace AquaparkApp.Models
{
    /// <summary>
    /// –ú–æ–¥–µ–ª—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    /// </summary>
    public class Inventory
    {
        [Key]
        public int InventoryId { get; set; }
        
        [Required(ErrorMessage = "–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")]
        [StringLength(100, ErrorMessage = "–ù–∞–∑–≤–∞–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤")]
        public string Name { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")]
        [Range(0, int.MaxValue, ErrorMessage = "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")]
        public int Quantity { get; set; }
        
        [Required(ErrorMessage = "–°—Ç–∞—Ç—É—Å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")]
        [StringLength(50, ErrorMessage = "–°—Ç–∞—Ç—É—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤")]
        public string Status { get; set; } = string.Empty;
        
        public int? ZoneId { get; set; }
        
        public int? ResponsibleEmployeeId { get; set; }
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        public virtual Zone? Zone { get; set; }
        public virtual Employee? ResponsibleEmployee { get; set; }
        public virtual ICollection<InventoryRental> InventoryRentals { get; set; } = new List<InventoryRental>();
        
        // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        public string DisplayName => $"{Name} (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {Quantity})";
        public string StatusDisplayName => Status switch
        {
            "–∏—Å–ø—Ä–∞–≤–Ω–æ" => "‚úÖ –ò—Å–ø—Ä–∞–≤–Ω–æ",
            "–Ω–∞ —Ä–µ–º–æ–Ω—Ç–µ" => "üîß –ù–∞ —Ä–µ–º–æ–Ω—Ç–µ",
            "–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ" => "‚ùå –ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ",
            _ => Status
        };
        public string ZoneDisplayName => Zone?.ZoneName ?? "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞";
        public string ResponsibleEmployeeDisplayName => ResponsibleEmployee?.FullName ?? "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω";
        public bool IsAvailable => Status == "–∏—Å–ø—Ä–∞–≤–Ω–æ" && Quantity > 0;
    }
}
